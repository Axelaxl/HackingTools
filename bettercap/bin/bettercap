#!/usr/bin/env ruby
# encoding: UTF-8

=begin

  BETTERCAP

  Author : Simone 'evilsocket' Margaritelli
  Email  : evilsocket@gmail.com
  Blog   : http://www.evilsocket.net/

  This project is released under the GPL 3 license.

=end

# Ensure bettercap is running with root privileges.
abort 'This software must run as root.' unless Process.uid.zero?

require 'bettercap'

begin
  puts BetterCap::BANNER.green.bold
  puts "\n\n\n"

  # We need this in order to report unhandled exceptions.
  original_argv = ARGV.clone

  # Create global context, parse command line arguments and perform basic
  # error checking.
  ctx = BetterCap::Options.parse!

  ctx.start!

  loop do
    sleep 10
  end

rescue SystemExit, Interrupt, SignalException
  BetterCap::Logger.raw "\n"

rescue OptionParser::InvalidOption,
       OptionParser::AmbiguousOption,
       OptionParser::MissingArgument => e
  BetterCap::Logger.error "'#{e.message.capitalize}', verify your command line arguments executing 'bettercap --help'."

rescue BetterCap::Error => e
  BetterCap::Logger.error e.message

rescue Exception => e
  puts "\n\n"
  BetterCap::Logger.error "Oooops, seems like something weird occurred, please copy paste the following output " \
                          "and open a new issue on https://github.com/evilsocket/bettercap/issues :\n"

  BetterCap::Logger.error "Platform          : #{RUBY_PLATFORM}"
  BetterCap::Logger.error "Ruby Version      : #{RUBY_VERSION}"
  BetterCap::Logger.error "BetterCap Version : #{BetterCap::VERSION}"
  BetterCap::Logger.error "Command Line      : #{original_argv.join(" ")}"
  BetterCap::Logger.error "Exception         : #{e.class}"
  BetterCap::Logger.error "Message           : #{e.message}"
  BetterCap::Logger.error "Backtrace         :\n\n    #{e.backtrace.join("\n    ")}\n"

ensure
  # handle double ctrl+c nicely
  trap("INT") { }

  # Make sure all the messages on the logger queue are printed.
  begin
    BetterCap::Logger.wait!
  rescue; end

  begin
    ctx.finalize unless ctx.nil?
  rescue; end
end
